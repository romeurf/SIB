import numpy as np
from si.base.transformer import Transformer
from si.data.dataset import Dataset


class SelectKBest(Transformer):
    def __init__(self, score_func: callable, k: int, **kwargs):

        self.score_func = score_func
        self.k = k
        self.F = None
        self.p = None

    def _fit(self, dataset: Dataset) -> 'SelectKBest':

        self.F, self.p = self.score_func(dataset)

    def _transform(self, dataset: Dataset) -> Dataset:
       
        idx = np.argsort(self.F)[-self.k:]
        X = dataset.X[:, idx]
        features = dataset.features[idx]

        return Dataset(X=X, y=dataset.y, features=features, label=dataset.label)